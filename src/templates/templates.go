// Code generated by go-bindata.
// sources:
// templates/40x.tmpl
// templates/50x.tmpl
// templates/includes/base.tmpl
// templates/layout.tmpl
// templates/layouts/about.tmpl
// templates/layouts/demo.tmpl
// templates/layouts/home.tmpl
// templates/layouts/index.tmpl
// templates/layouts/login.tmpl
// templates/layouts/register.tmpl
// templates/layouts/user.tmpl
// templates/www/about.tmpl
// templates/www/demo.tmpl
// templates/www/home.tmpl
// templates/www/login.tmpl
// templates/www/regist.tmpl
// templates/www/user.tmpl
// DO NOT EDIT!

package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templates40xTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb2\xc9\x30\x52\x48\xce\x49\x2c\x2e\xb6\x55\x2a\x49\xad\x28\xd1\x4d\x4e\xcd\x2b\x49\x2d\x52\xb2\xab\xae\xd6\xab\xad\xb5\xd1\xcf\x30\xb2\x03\x04\x00\x00\xff\xff\x53\x61\xfe\xe1\x22\x00\x00\x00")

func templates40xTmplBytes() ([]byte, error) {
	return bindataRead(
		_templates40xTmpl,
		"templates/40x.tmpl",
	)
}

func templates40xTmpl() (*asset, error) {
	bytes, err := templates40xTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/40x.tmpl", size: 34, mode: os.FileMode(420), modTime: time.Unix(1427973550, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templates50xTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb2\xc9\x30\x52\x48\xce\x49\x2c\x2e\xb6\x55\x2a\x49\xad\x28\xd1\x4d\x4e\xcd\x2b\x49\x2d\x52\xb2\xab\xae\xd6\xab\xad\xb5\xd1\xcf\x30\xb2\x03\x04\x00\x00\xff\xff\x53\x61\xfe\xe1\x22\x00\x00\x00")

func templates50xTmplBytes() ([]byte, error) {
	return bindataRead(
		_templates50xTmpl,
		"templates/50x.tmpl",
	)
}

func templates50xTmpl() (*asset, error) {
	bytes, err := templates50xTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/50x.tmpl", size: 34, mode: os.FileMode(420), modTime: time.Unix(1427973558, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesIncludesBaseTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x55\xcf\xce\xe3\x34\x10\x3f\xf3\x3d\x85\xd7\x7b\x01\x89\xd4\xc0\x01\x21\x94\x46\xda\x3f\x88\x3d\xac\x04\x42\x7b\xe1\xb4\x72\xe2\x69\xe2\x0f\x27\x0e\xf6\xa4\xfb\x55\xab\xbd\xf3\x12\x1c\xb8\x72\xe1\x05\x78\x1d\x10\x8f\xc1\x38\x4e\xd2\x3a\x6d\x77\x2b\x21\x71\x68\xed\xd8\xbf\x99\xf9\x79\xe6\xe7\x71\xfe\xe8\xf9\x77\xcf\x5e\xfd\xf8\xfd\x37\xac\xc1\xd6\x14\x77\x79\x1c\x18\xcb\x1b\x90\x2a\x4c\x18\x7b\xfb\x16\xa1\xed\x8d\x44\x60\x1c\x35\x1a\xe0\x6c\xf3\xee\xdd\xb4\xc5\x8e\x7b\xbe\x72\xba\x47\xff\xba\x36\xb6\x94\x86\x40\x8c\x50\xb9\x88\x8e\xf2\xd2\xaa\x43\x71\xf7\xd1\x25\x8b\x09\x7a\xee\x50\x2b\x28\xa5\x9b\xb6\x53\xd3\xca\x76\x08\x1d\xce\x51\x76\xd6\x22\x38\x0a\x23\x8e\xb3\x18\x91\x08\x8c\x47\xba\x23\x73\x05\x3b\xdd\x5d\x60\x1a\x3c\x18\xdd\xfd\xc4\x1c\x98\x2d\xf7\x8d\x75\x58\x0d\xc8\x34\x05\xe1\xac\x71\xb0\xdb\x72\x21\xbd\x07\xf4\x42\xb7\xb5\xd8\xc9\x7d\xd8\xda\xd0\x1f\x67\x78\xe8\x61\xcb\x75\x2b\x6b\x10\x0f\x59\x34\x11\xc5\xe4\x2f\xb5\xad\xbc\x27\x52\x16\x3d\x3a\xd9\x6f\x5a\xdd\x6d\x68\x85\x4f\x41\xf1\x60\xc0\x37\x00\x18\xcd\x23\xc5\xc9\x3b\xc2\x03\x8a\x7b\xb9\x97\x71\x95\x33\xef\xaa\xa3\xdb\x7b\x2f\x8c\x2e\x85\x83\x9f\x07\xed\x20\xa3\xb5\xa1\xdf\xdc\x7b\x5e\xe4\x22\xe2\xff\x8b\xbb\xd4\x11\xe5\x10\x3a\x15\xf2\x75\x9e\xcd\x90\xc6\xcb\xfb\x73\x19\x43\x9a\x1f\x65\x19\xfb\xeb\x8f\x3f\xff\xf9\xe5\xf7\xbf\x7f\xfd\x8d\x65\x59\x94\x58\xde\xc9\x3d\xab\x0c\x31\xd8\x72\x9a\x12\x9a\xc5\x21\x23\x27\x72\x30\xc8\x23\x8e\x90\x4a\x2f\xc8\xa0\x01\x49\x21\x5c\xb6\x33\x83\x56\x0b\x86\x50\x21\xcc\x53\x27\x89\x4b\xf8\xa1\xad\x6b\x03\xac\x06\x64\xb5\xb3\x43\x0f\x8a\xed\xac\x63\x25\x20\x49\x85\xb5\xb6\xd4\xb4\xab\xb4\x27\x6d\x1d\x16\x4e\xeb\x68\x13\xa1\x20\x67\x70\x27\xb1\x08\x55\x0e\x88\xb6\x9b\xb2\x1b\x3f\xf8\xca\x6c\xa2\x50\x59\x63\x64\xef\x41\x71\xa6\x24\xca\x69\x39\x1c\x25\xae\xcf\xcb\xd2\x11\xd9\x2d\x7f\x5c\xfa\x0c\x1e\x24\x89\x1e\xb2\xc9\xd1\x8c\xcc\x3e\x4f\x38\x10\x0b\xdf\xcb\x6e\x8e\xea\x5d\x66\x3b\x73\xe0\xc5\xab\x18\x97\x8c\x75\x2d\x51\xdb\x8e\x6a\x49\xb8\xf7\x98\x06\x09\x67\xa1\x5e\xc5\xff\x05\xa5\xab\x3a\xe6\x2c\x59\x0b\x15\xcc\xe5\x2a\x8b\x65\x28\xe9\x72\x25\x79\xf1\xc2\xb6\x90\x0b\x59\x24\x45\x63\x1f\xb6\x4b\x79\xd2\x9d\x66\xd2\x50\xba\x9f\x46\xd8\x1b\xad\xb0\xd9\xf2\x2f\x3e\x23\x0b\xd0\x75\x83\x71\x9e\xdc\x92\xd0\x07\xc2\x99\x5e\x8f\xae\x37\x7d\x57\xa7\x92\x20\x52\x47\x15\x09\x92\x11\x75\xa0\xe4\x6c\xcf\xa8\x8e\x50\xd1\x95\x6c\xc6\xea\xb0\xd0\x2f\xfc\xa7\x41\x97\x2d\x0d\x41\xb5\x96\xb6\x1c\x9b\x1a\xdd\x28\xd8\x51\x2d\xba\xab\xaf\x6a\x74\x16\x07\x5b\x89\x85\x33\xad\x48\x99\xb7\x8a\x29\x1f\xcc\x49\x02\x67\x67\x34\xac\x33\x67\xf4\x8c\x93\x15\xea\x3d\xac\xf6\xc7\x4a\x24\xc5\xba\xa2\xd2\x8f\xab\xc1\x39\x3a\xe5\x27\x93\x38\x92\xf4\xc5\x14\x1a\x7d\x16\xbb\x38\x7a\x57\xd0\x5a\x5e\x3c\xa7\xff\x60\xfa\x21\xb4\x2c\xed\x40\x2d\xe5\x49\x18\x6e\xc0\x37\x88\xbd\xff\x5a\x88\x5a\x63\x33\x94\x9b\xca\xb6\xa2\xb1\xa5\xfd\xea\x4b\x5e\x7c\xab\xf1\xc5\x50\x5e\xf2\x91\x8b\xc1\x9c\x7e\xdf\x92\xde\x79\xea\x82\xe8\xae\xe7\x5a\x39\xdb\x2b\xfb\xa6\xbb\x9e\xed\xc7\x7c\x8d\x9d\x3a\xcd\xaa\xed\x2c\x9e\x98\xb3\xe6\xa4\x77\x49\xa7\x25\x69\x85\x4a\xa1\x80\x84\xb3\x93\x86\x34\x54\x3c\xa9\x2a\x3b\x90\x14\x93\x1a\x56\xd2\xd1\x9b\x55\x5c\x2b\x5c\x72\xda\x85\x4c\x0b\xdd\x30\xc7\x1c\xe7\x6b\xa3\x75\xc5\x8c\xad\x35\x9d\xf7\x65\x18\x2e\x57\xec\xdc\xc6\x41\xad\x3d\x86\x5e\xfd\xc3\x34\x7b\xaf\xe5\x42\x52\xef\xf5\xd8\xe1\x6f\x89\x41\xbc\x46\x29\xbd\x1c\xc7\x6b\xfe\xd7\x5a\x38\xd7\x73\x8a\x88\x0d\x63\x6c\x13\x62\xb3\xba\xaa\x27\x77\x3f\x81\xad\x1e\xc3\xe3\xd3\x2a\xc8\x41\x71\xb7\xbc\xcc\xff\x06\x00\x00\xff\xff\x25\x2d\x3a\x19\xf2\x09\x00\x00")

func templatesIncludesBaseTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesIncludesBaseTmpl,
		"templates/includes/base.tmpl",
	)
}

func templatesIncludesBaseTmpl() (*asset, error) {
	bytes, err := templatesIncludesBaseTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/includes/base.tmpl", size: 2546, mode: os.FileMode(420), modTime: time.Unix(1445266888, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLayoutTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x56\xcd\x6e\xdc\x36\x10\xbe\xe7\x29\x18\xe6\x90\x04\xa8\x44\xa7\x87\xa2\x75\xb4\x02\xe2\xa4\x68\x0e\x01\x5a\x04\xbe\x14\x45\x51\x50\xe2\xac\x44\x97\x12\x55\x72\xb4\xf1\x22\xf0\xbd\x2f\xd1\x43\xaf\xbd\xf4\x05\xfa\x3a\x2d\xfa\x18\x1d\x8a\x92\x76\x25\x7b\x1d\x9f\x0a\xd8\xcb\x1f\xcd\x1f\xe7\xfb\x38\x9c\xec\x71\x92\x30\x84\xa6\x33\x12\xc1\x0b\x23\xf7\xb6\xc7\x14\x69\xcd\x92\x24\x7f\x94\x3d\x7e\xf3\xed\xeb\xcb\xef\xbf\xfb\x9a\xd5\xd8\x18\x5a\xc7\x81\xb1\xac\x06\xa9\xc2\x84\xa6\xa8\xd1\x40\x7e\x61\x6c\x95\x89\x38\x8f\xfb\x46\xb7\x3f\x33\x07\x66\xc3\x7d\x6d\x1d\x96\x3d\x32\x5d\xda\x96\xb3\xda\xc1\x76\xc3\x85\x6e\x2a\xb1\x95\xbb\xb0\x97\xd2\x0f\x67\xb8\xef\x60\xc3\x75\x23\x2b\x10\xd7\x49\x94\x15\xc7\xc6\x46\x45\xe9\x3d\xa0\x17\xa5\xf7\xa2\xb0\x16\x3d\x3a\xd9\xa5\x8d\x6e\x53\xda\xe1\xa3\x47\xdc\x1b\xf0\x35\x00\x1e\x4c\xf8\xd2\xe9\x0e\x47\x2f\x08\xd7\x28\xae\xe4\x4e\xc6\x5d\xce\xbc\x2b\x0f\xa6\xaf\x28\x15\xba\x10\x0e\x7e\xe9\xb5\x83\x84\xf6\xfa\x2e\xbd\xf2\x3c\xcf\x44\x94\x5f\x9a\x54\x12\x65\xd2\x48\xdd\x92\xe3\x61\xc7\x8b\xb0\xba\xd7\xe8\x2d\x73\x99\x98\x72\x9a\x15\x56\xed\xf3\x47\xd1\x45\x00\xe8\xef\x3f\xff\xfa\xf7\xd7\x3f\xfe\xf9\xed\xf7\x01\x94\x61\xbb\x95\x3b\x56\x1a\xb2\xbc\xe1\x34\x2d\xa4\x63\x71\x48\x14\x6c\x65\x6f\x90\x47\x39\x92\x54\x7a\x96\xa4\x8c\x22\xc5\x05\x2e\xd9\x9a\x5e\xab\x59\x66\x74\x73\xe1\x64\xab\x58\xf8\x47\x5b\x55\x06\x58\x05\xc8\x2a\x67\xfb\x0e\x14\xdb\x5a\xc7\x0a\x40\x04\xc7\x1a\x5b\x68\xfa\xaa\xb4\x27\xda\xec\xe7\x98\xd6\xde\xc6\x80\xc2\xa9\xc0\x1d\xf9\x0a\x07\xec\x11\x6d\x3b\x42\x11\x17\x7c\xa5\x36\x86\x50\x5a\x63\x64\xe7\x41\xf1\x98\xe5\xb8\x1d\x8e\x12\xf7\xa7\x6d\xe9\x28\xd8\x0d\x7f\x52\xf8\x04\xae\x25\xf1\x17\x92\xd1\xd0\x24\x99\xbc\x58\xc4\x10\xd0\xeb\x64\x3b\x79\xf5\x2e\xb1\xad\xd9\xf3\xfc\x32\xfa\x25\x65\x5d\x49\xd4\xb6\x25\x8c\x48\xee\x1e\xd5\x40\xd4\x84\x3c\x0d\x70\xfe\x2f\xa2\x99\x88\x39\x5b\xec\x05\x04\x33\xb9\xca\x62\x11\x20\x9d\x6f\x1c\xcf\xdf\xda\x06\x32\x21\xf3\x05\x68\xec\xd3\x7a\xcb\x38\xe9\xe6\x32\x69\x28\xdd\x17\x51\xec\x83\x56\x58\x6f\xf8\xe7\x67\xa4\x01\xba\xaa\x31\xce\x23\xfb\xc3\x35\x0f\x87\xf9\x69\xb0\x99\x76\x6d\xb5\xe4\x02\x45\x73\xa0\x8f\x20\xfe\x8c\xcc\x9f\x0f\xf5\x9a\x00\x84\x92\x2e\x6e\x3d\xc0\xc2\x42\x29\xf0\x9f\x05\x42\x36\x34\x04\xba\x5a\xfa\xe4\x58\x60\x37\xb4\x38\x30\x75\xa0\x89\x6e\xab\x93\xe4\x9c\x58\xc1\x56\x2c\xe1\x4c\x2b\xa2\xe4\x43\x59\x94\xf5\xe6\x28\x73\x93\x31\x1a\xd6\x29\x33\x7a\x92\x93\x25\xea\x1d\xac\xbe\x0f\x10\x2c\x50\x3a\x41\xcf\x67\x65\xef\x1c\x9d\xf2\xf9\xc8\x8a\x45\xfa\x62\x0a\x8d\xbe\xe5\x3b\x3f\x58\x57\xd0\x58\x9e\xbf\xa1\xdf\xa0\xfa\x29\x69\x59\xd0\x7b\xc0\xf3\x57\x61\x78\x80\x7c\x8d\xd8\xf9\x73\x21\x2a\x8d\x75\x5f\xa4\xa5\x6d\x44\x6d\x0b\xfb\xe5\x17\x3c\xff\x46\xe3\xdb\xbe\xb8\xcb\x46\x26\x7a\x73\xbc\x7e\x48\x7a\xa7\xa9\x0b\x6c\x3b\x9d\x6b\xe5\x6c\xa7\xec\x87\xf6\x74\xb6\x9f\xf0\xb5\xec\x58\x62\x56\xf5\x66\xb6\xc4\x9c\x35\x47\x45\x4b\x3a\x2d\x89\x2b\x04\x85\x02\x22\xce\x56\x1a\xe2\x50\xfe\xaa\x2c\x6d\x4f\x54\x5c\x60\x58\x4a\x47\xcf\x51\x7e\x0a\xb8\xc5\x69\xe7\x60\x1a\x68\xfb\xc9\xe7\x30\x5f\x2b\xad\x11\xa3\x67\x98\x5e\x9e\xfc\x5d\x18\xee\x46\xec\xb6\x8e\x83\x4a\x7b\x0a\xed\xfd\x30\xde\xab\x35\x07\xa8\x77\x7a\x28\xeb\x0f\xb1\x4f\x31\x0d\x34\x7a\x37\x8c\xa7\xec\xaf\x79\x70\x9b\xcb\x4b\x89\x58\x2c\x86\x12\x21\xd2\xd5\x35\x3d\xba\xf7\x0b\xb1\xd5\x0b\x78\x78\x4f\x05\x19\x38\x7e\x72\xdf\x03\x01\xea\x86\x9a\x33\xde\xb8\xb9\x4d\xa2\x1a\xe7\x0e\x0e\xee\x7c\x5f\xa9\xf6\x85\x06\x64\xc3\x3b\xa9\x14\x95\xa1\xf3\xb3\xee\x9a\xbd\xa0\x9f\x97\xb1\x56\x9e\x7f\x75\x16\x16\x33\x98\x1f\x3f\xb2\xbd\x06\xa3\xd8\xcd\xcd\x14\x75\x37\x19\x0d\x9d\x4a\x52\x52\x00\x21\xdb\x97\xb5\xf6\x8c\xfe\x42\x5c\xa4\x34\x85\x76\x73\xc3\x3a\xea\x9a\xd2\x4c\x74\xd3\x79\x86\x42\x3a\x4c\xef\xed\x7b\xa6\x08\xc6\xae\xe4\xca\x3f\xfb\xe1\xe9\xdc\x54\x3d\xfd\xf1\xf9\xcb\xd1\xdc\x71\x9f\x12\xdb\x13\xea\x57\x42\x33\xf8\x5f\x00\x00\x00\xff\xff\x7a\xbf\x70\x70\x42\x0a\x00\x00")

func templatesLayoutTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesLayoutTmpl,
		"templates/layout.tmpl",
	)
}

func templatesLayoutTmpl() (*asset, error) {
	bytes, err := templatesLayoutTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/layout.tmpl", size: 2626, mode: os.FileMode(420), modTime: time.Unix(1444809935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLayoutsAboutTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x8f\x41\x4f\x03\x21\x10\x85\xcf\xf2\x2b\x26\x5c\xaa\x07\xdd\xda\x9b\x2d\xdd\xdf\xe0\xdd\x78\x40\x18\xbb\x34\x1b\x16\x61\xac\x6d\x08\xff\xdd\x61\x37\x24\xdb\x0b\x99\x79\x79\x6f\xbe\x47\xce\x16\xbf\x9d\x47\x90\xe4\x68\x44\x09\xa5\xa8\x79\xea\x73\x7e\x99\x87\x52\xe0\x5d\x9f\x50\x75\x4d\x06\xf4\x96\x6d\x42\xf0\xd8\xc2\xc9\x44\x17\x28\xd5\xb8\x50\xcb\x02\x74\x0b\x78\x94\x84\x57\xea\xce\xfa\xa2\x17\x55\xf6\xe2\x21\xe2\xcf\xaf\x8b\x78\x4e\x8f\x1f\x9b\xaf\x69\xa2\x44\x51\x87\xcd\xe7\xd3\x41\xa8\x6e\x71\xf5\xe2\x0e\xd3\x28\x66\xf2\x84\x9e\x64\x85\x58\x77\x01\x33\xea\x94\x8e\xb3\xac\xd9\x10\x25\x24\xba\x8d\x0c\x0d\xda\x5a\xe7\x4f\xfb\x6d\xb8\xc2\x2b\x3f\x07\xf8\x73\x96\x86\xfd\xdb\xb6\x2e\xb5\x83\x1a\x76\x2d\x5e\x1b\x3e\x1b\xbe\xcb\x07\x56\xbf\x56\xdd\xb0\xeb\xb9\x11\x83\x56\x75\xfe\x03\x00\x00\xff\xff\x7b\xca\xe9\xf9\x30\x01\x00\x00")

func templatesLayoutsAboutTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesLayoutsAboutTmpl,
		"templates/layouts/about.tmpl",
	)
}

func templatesLayoutsAboutTmpl() (*asset, error) {
	bytes, err := templatesLayoutsAboutTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/layouts/about.tmpl", size: 304, mode: os.FileMode(420), modTime: time.Unix(1445266917, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLayoutsDemoTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x56\xcd\x6e\xdb\x30\x0c\x3e\xc7\x4f\x21\xe8\xd2\xed\xe0\xa8\x69\xb7\x62\x6b\x1d\x9f\x06\xac\x97\x01\xc3\xae\xc3\x30\xc8\x11\x6b\xab\xb3\x2d\x57\xa2\x9b\x16\x41\xde\x7d\x94\x1c\x3b\x69\xd1\xf4\x27\x08\xd2\x00\xb1\x48\x99\xe2\xf7\x91\x94\x45\x2d\x16\x0a\xae\x74\x0d\x8c\xa3\xc6\x12\x38\x5b\x2e\x93\x20\xa5\x8b\xc5\x38\x08\xcb\x25\xfb\x29\x73\x48\x44\x3f\xcd\xa0\x56\x64\x16\x45\x24\xf6\x8b\xdd\xcc\xea\x06\x9d\x5f\x1e\x25\xa5\xae\xff\xb1\xc2\xc2\xd5\x94\x0b\xe9\x1c\xa0\x13\x33\xe7\xc4\xf5\x4d\x0b\xf6\x7e\x8c\x16\x00\x65\x56\xc2\x98\x26\x39\xb3\x50\x4e\xb9\xc3\xfb\x12\x5c\x41\x2f\xb8\x48\x5f\xef\x00\x0b\xa8\x60\x4c\x1c\x64\x5b\xe2\x76\x77\x1d\x39\x86\xf7\x0d\x4c\x39\xc2\x1d\x8a\x6b\x79\x2b\xbb\x59\x9e\x46\x23\x0b\x37\xad\xb6\x70\xed\x3e\xfc\x3e\xca\x8c\x41\x87\x56\x36\x47\x7f\x3e\x5e\x44\x89\xe8\xac\xd2\xe8\x41\xd8\x7d\xd4\x33\x53\x23\xd4\xc8\x7d\xd0\x4a\xdf\xb2\x59\x49\x6c\xa7\x61\x5a\x92\x81\xe5\x2c\x30\x99\xf2\x46\x2a\xa5\xeb\xfc\xfc\xb8\xb9\x63\x13\x7a\x5c\xb0\xb9\x56\x58\x9c\x7f\x3d\xf6\x0a\x71\x88\x46\x49\x71\xd2\xaf\xf7\x14\xe3\x19\x39\x26\x0f\xe9\x0f\x59\x4b\xd4\xb5\x66\xdf\xa0\x32\x89\x28\x4e\x52\x6f\x7b\xfa\xa4\xed\x77\x8d\x97\x6d\xc6\x7e\x41\x13\x8d\x18\xfd\x12\xd9\x9b\x65\x58\x33\xfa\xc7\x3e\xb3\x7c\x95\xda\x02\xb1\x71\xe7\x42\xe4\x1a\x8b\x36\x1b\xcf\x4c\x25\x2e\x4d\x66\xbe\x9c\x89\x4a\x5a\x0f\xf9\xd7\xc9\xaa\xa1\x3d\x91\xfa\x55\x89\x90\x1e\x59\x14\xa7\x7e\xd8\x88\xd6\x9a\xb9\x4f\x62\xc0\x7b\x90\x84\x32\x76\x55\x3c\x39\xe9\x5f\x06\x83\x50\xb7\x81\x7b\x50\xc2\x33\xce\x8c\x55\x60\x41\xad\xd4\xc2\xdc\x82\x65\x43\xa5\x37\x7d\x74\x7e\x2c\x53\x12\x65\x8c\x18\x6b\x35\xe5\xc7\x8f\x0d\x3a\x23\x95\xca\xa6\xa1\x8d\xab\x1e\x2f\x17\x68\x5f\xf0\x38\xe1\x83\xda\x48\x4b\xf9\x7d\x1e\xc7\x9a\x96\x2a\xe0\x76\xc3\x7a\x12\x6a\xb2\x0d\x6a\x3e\x9f\x8b\xc2\xd0\xbe\xcf\xcd\xa1\xe0\x64\x46\xe1\x1d\x10\xaf\x75\x60\x77\x86\x3b\x7d\x5b\xe5\x2a\xa3\xa0\xdc\xb1\x70\x9f\xde\x06\x85\x40\x9f\x93\x44\xd8\x11\xed\xf3\x33\x29\xdb\x63\x65\xb6\xc2\xd0\x69\xb2\x3a\x93\x7d\x7d\x04\x55\x70\x25\xf8\xa3\xe1\xb0\x04\x4a\x93\xeb\x9a\xf0\xc3\xf8\x2e\xf0\xf4\x41\x74\xf8\x24\x1c\x9e\x80\x85\x5c\xbb\x70\xe4\x0f\xe2\xee\x24\xce\xb6\x1f\x9e\x7a\x8f\x61\x6d\x85\x59\x87\x45\x80\xeb\xbd\xb5\x56\xf6\x9c\xdf\x57\x12\xe9\xf7\xd8\x20\xbf\x0f\x8d\x8d\x52\x6f\xaa\xaf\x23\x43\xaa\x6f\x9f\x7d\x7b\x16\xd4\x9f\x43\x13\x0f\x23\x09\x2f\xdd\x8c\x1e\x5c\x8d\xa8\x97\x8a\xa1\x23\xaf\x25\x8a\x29\x87\x70\x5b\x1a\xad\xaf\x4b\x2b\x88\xe1\xd6\xf4\x3f\x00\x00\xff\xff\x62\xfb\x19\xc0\x67\x0a\x00\x00")

func templatesLayoutsDemoTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesLayoutsDemoTmpl,
		"templates/layouts/demo.tmpl",
	)
}

func templatesLayoutsDemoTmpl() (*asset, error) {
	bytes, err := templatesLayoutsDemoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/layouts/demo.tmpl", size: 2663, mode: os.FileMode(420), modTime: time.Unix(1445860488, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLayoutsHomeTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x50\x31\x52\xeb\x30\x10\xad\xe3\x53\x28\x6a\xf2\x7f\xf1\xa3\xa4\xf9\x03\x89\xe2\x96\x54\x0c\x1d\x05\x43\x21\xdb\x1b\x5b\xc1\x96\x84\xb4\x0e\xc9\x78\x5c\x70\x03\x1a\xae\x00\x97\xe0\x3a\xa9\xb9\x02\x92\x1d\x43\x28\xb4\x7a\xfb\xf6\xed\xbc\xdd\x6d\x9a\x0c\x36\x52\x01\xa1\x28\xb1\x04\x4a\xda\x96\x77\x28\x6e\x9a\x69\x07\xda\x96\xdc\x88\x1c\x38\x1b\x68\x02\x2a\xf3\xb2\x28\xf2\x70\x68\x76\xa9\x95\x06\x5d\x68\x8f\x78\x9f\x10\x3c\x18\x58\x51\x84\x3d\xb2\xad\xd8\x89\x9e\xa5\x71\x34\xb2\xf0\x58\x4b\x0b\x5b\xf7\xe7\x6e\x92\x68\x8d\x0e\xad\x30\x93\xfb\xbf\xcb\x88\xb3\x5e\x15\x47\xbf\x6c\x06\x97\x54\x2b\x04\x85\xbd\x4b\x26\x77\x24\x2d\x85\x73\xab\x8e\x17\x5e\x61\x29\x71\x78\x28\xbd\xab\x11\x59\x26\x55\xbe\x98\x99\x3d\x99\xfb\xb0\x24\x4f\x32\xc3\x62\x71\x39\x0b\x49\x18\xe2\xbc\x7f\x5b\x57\x89\x46\xab\x55\x28\x8c\x78\x31\x8f\x6f\xa1\x4c\x75\x05\x63\xce\x7c\x12\x38\x13\x1f\x5f\xde\x8f\xaf\x6f\xe7\xf1\xf3\xe3\x99\x33\x73\x2a\xaf\xa1\x2c\x35\xf1\x47\xab\x1d\xd8\xe9\xb5\x4c\x1f\x94\xa8\xfc\xf1\xc6\x3f\x12\x2e\x06\xc3\x04\x15\xf1\xef\x9f\xb1\xb2\x12\xf6\xd0\xe1\x32\xa7\xa4\xb0\xb0\x59\xd1\x02\xd1\xb8\x05\x63\xb9\xc4\xa2\x4e\xa6\x7e\x10\x56\xe8\x44\x5f\xfc\xa7\xc4\xea\xb0\x5d\x52\x23\x86\x61\xaf\x24\xae\xeb\x84\x33\x11\xf7\x26\x9c\xf9\xa5\xe2\xe8\xf4\x7d\x9f\xf0\x2b\x00\x00\xff\xff\xfe\xb9\xe9\xb5\xe4\x01\x00\x00")

func templatesLayoutsHomeTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesLayoutsHomeTmpl,
		"templates/layouts/home.tmpl",
	)
}

func templatesLayoutsHomeTmpl() (*asset, error) {
	bytes, err := templatesLayoutsHomeTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/layouts/home.tmpl", size: 484, mode: os.FileMode(420), modTime: time.Unix(1445269054, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLayoutsIndexTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xae\x56\x48\x49\x4d\xcb\xcc\x4b\x55\x50\x2a\xc9\x2c\xc9\x49\x55\x52\xa8\xad\xb5\x01\xb3\xec\x3c\xf2\x73\x53\x15\x02\x12\xd3\x53\x6d\xf4\x21\x02\x40\xb5\xa9\x79\x29\x40\x05\x80\x00\x00\x00\xff\xff\x7d\x1d\x83\x97\x35\x00\x00\x00")

func templatesLayoutsIndexTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesLayoutsIndexTmpl,
		"templates/layouts/index.tmpl",
	)
}

func templatesLayoutsIndexTmpl() (*asset, error) {
	bytes, err := templatesLayoutsIndexTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/layouts/index.tmpl", size: 53, mode: os.FileMode(420), modTime: time.Unix(1445065500, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLayoutsLoginTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x51\x4d\x6f\xe3\x20\x10\x3d\xc7\xbf\x02\x71\xc9\xee\x61\x97\x6c\x6e\x9b\x60\xf7\x0f\x54\xaa\xa5\xb6\xa7\xaa\x07\x02\x24\x26\xb5\x81\xc2\xe4\x4b\x16\xff\xbd\x43\x5c\xb7\x6e\x2e\x68\xe6\xe9\xcd\x7b\xf3\x98\xbe\x57\x7a\x6b\xac\x26\x14\x0c\xb4\x9a\x92\x94\xf8\xb5\xaa\xfa\xfe\xef\xb5\x48\x89\xd4\x62\xa7\x39\x1b\x61\xa2\xad\x42\x5a\x51\x60\x39\x0e\x47\x19\x8c\x87\x98\xc7\x0b\x3e\x34\x04\x2e\x5e\x97\x14\xf4\x19\xd8\x5e\x1c\xc5\x80\xd2\xaa\x98\x05\xfd\x7e\x30\x41\xef\xe3\xaf\x97\xf9\xc6\x39\x88\x10\x84\x9f\xbf\xfe\x5e\x17\x9c\x0d\xac\xaa\xf8\x61\x33\xba\x48\x67\x41\x5b\xa0\xd9\x44\x99\x23\x91\xad\x88\xb1\xbc\xc2\x02\x09\x81\x92\x08\x97\x16\x4d\xbd\x50\xca\xd8\xdd\x6a\xe1\xcf\xe4\x1f\x3e\x6b\x72\x32\x0a\x9a\xd5\xff\x45\x6e\xf2\x0e\xbc\x59\x8e\xe3\x79\xc3\x3f\x12\x75\x51\x60\x92\x9a\xb3\x66\x99\x89\x5b\x17\x3a\xd2\x69\x68\x9c\x2a\x69\xfd\xf0\xf8\x44\x89\x90\x60\x9c\x2d\x29\x6b\xdd\xce\xd8\x3b\x9c\x09\x5a\x61\x22\x09\xb5\x08\xa2\x4b\xa9\x9c\x40\x29\x65\xbf\x19\x37\xd6\x1f\xa6\x9f\x42\x89\x6f\x85\xd4\x8d\x6b\x95\x0e\x25\x7d\x8e\x3a\x58\xd1\xe1\x05\xf2\x5b\x52\x6b\xe4\xdb\xd0\xb3\x8a\x6f\x02\xbe\xb7\x22\x1e\xb7\x3f\xb9\xa0\x6e\x84\xea\x2f\x78\x10\xfa\xa6\x4d\x85\x36\x07\x00\x67\xab\xfb\x1c\x80\xb3\xcf\x6e\x86\x71\x59\xce\x5b\xe1\x25\xf0\x83\x27\x67\xf8\x08\x00\x00\xff\xff\xcc\x12\x8d\x99\x28\x02\x00\x00")

func templatesLayoutsLoginTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesLayoutsLoginTmpl,
		"templates/layouts/login.tmpl",
	)
}

func templatesLayoutsLoginTmpl() (*asset, error) {
	bytes, err := templatesLayoutsLoginTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/layouts/login.tmpl", size: 552, mode: os.FileMode(420), modTime: time.Unix(1445679885, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLayoutsRegisterTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x51\xcd\xd2\xd3\x30\x0c\x3c\x37\x4f\xe1\xf1\xe5\x83\x03\xf8\xa3\x37\x5a\x27\x3c\x02\x19\x7e\x4e\x0c\x07\xd7\x56\x1b\x97\xc4\x36\xb6\xfa\x37\x19\xbf\x3b\x72\xd3\x40\xe8\x45\x23\xed\x68\x77\xbd\xd6\x38\x1a\xd8\x5b\x07\x8c\xa3\xc5\x1e\x38\xcb\x59\xde\xbb\x66\x1c\xdf\xdf\x9b\x9c\x59\xab\x0e\x20\xc5\x0c\x33\x70\x86\xd6\xaa\x8a\xda\x99\x9c\x74\xb4\x01\x53\xa1\x57\x72\x1a\x18\xde\x02\xd4\x1c\xe1\x8a\xe2\xa8\xce\x6a\x42\x79\x53\xad\x22\xfc\x3e\xd9\x08\xc7\xf4\xe6\xc7\xcb\xce\x7b\x4c\x18\x55\x78\xf9\xf9\x76\x5b\x49\x31\x6d\x35\xd5\x7f\x36\xb3\x8b\xf6\x0e\xc1\x21\x2f\x26\xc6\x9e\x99\xee\x55\x4a\xf5\x1d\x56\xb4\x10\x39\x4b\x78\xeb\xc9\x34\x28\x63\xac\x3b\x6c\x5e\xc3\x95\x7d\xa0\xb2\x65\x17\x6b\xb0\xdb\x7c\x7c\x2d\x43\x79\x83\xec\xd6\x33\xbd\xbc\xf0\x9d\x26\x5d\x12\x58\xa4\x96\xa2\x5b\x97\xc5\xbd\x8f\x03\x1b\x00\x3b\x6f\x6a\xde\x7e\xfe\xfa\x8d\x33\xa5\xd1\x7a\x57\x73\x11\xe1\x60\x13\xf1\x3e\x11\x2d\x82\xa1\x50\x1a\x5b\x15\xd5\x90\x73\xbd\x80\x72\x2e\x96\x2b\x69\x5d\x38\x2d\xff\x85\xb3\xd0\x2b\x0d\x9d\xef\x0d\xc4\x9a\x7f\x4f\x10\x9d\x1a\xe8\x08\xa5\xd6\xdc\x59\xfd\x6b\x9a\x45\x23\x77\x91\xea\xb3\x48\xa0\x00\x17\x1f\xcd\x93\x50\xfb\x17\x9e\x84\xfe\xad\x2d\x85\x76\x27\x44\xef\x9a\x2f\x8f\x0c\x52\x3c\x80\x15\x85\x16\x25\x75\x43\xf7\xa0\x6f\x5e\x1c\xe3\x4f\x00\x00\x00\xff\xff\x72\x8b\xdc\xe1\x2e\x02\x00\x00")

func templatesLayoutsRegisterTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesLayoutsRegisterTmpl,
		"templates/layouts/register.tmpl",
	)
}

func templatesLayoutsRegisterTmpl() (*asset, error) {
	bytes, err := templatesLayoutsRegisterTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/layouts/register.tmpl", size: 558, mode: os.FileMode(420), modTime: time.Unix(1445680369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLayoutsUserTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x4f\xc1\x4e\xc3\x30\x0c\x3d\x93\xaf\xb0\x72\x19\x1c\x58\xc7\x6e\x6c\x59\x3f\x01\x71\x47\x1c\x42\x62\xd6\x8c\x92\x86\xd8\x1b\xab\xaa\xfe\x3b\x4e\xab\x4a\xec\x62\x3d\x3f\xbd\xe7\xf7\x3c\x0c\x1e\x3f\x43\x44\xd0\x1c\xb8\x45\x0d\xe3\x68\x26\x54\x0f\xc3\x7a\x02\xe3\x08\xaf\xf6\x88\xa6\x5a\x68\xc0\xe8\x45\xa6\x94\xc0\xc5\x4c\x2e\x87\xc4\x54\xec\xca\xcc\x0b\x70\x9f\xf0\xa0\x19\xaf\x5c\x9d\xec\xc5\xce\xac\xae\xd5\x5d\xc6\x9f\x73\xc8\x78\xa2\xfb\xb7\xd5\x47\xd7\x31\x71\xb6\x69\xf5\xfe\xb0\x57\xa6\x9a\x55\xb5\xba\x89\x59\x52\x5c\x17\x19\x23\xcf\x29\x3e\x5c\xc0\xb5\x96\xe8\x30\xf1\x56\x14\x59\x03\x71\xdf\x4a\x6a\xb2\xde\x87\x78\xdc\x6d\xd2\x15\x9e\x64\xec\xe1\x37\x78\x6e\x76\xcf\x9b\xb2\x94\x12\xa6\xd9\x2e\xf6\x52\xf1\xd1\xc9\x61\x39\x50\xde\x3e\x13\xe6\xf5\x4b\x70\x5f\xd1\x7e\xcb\xfb\xa6\x6a\xb6\xb5\x54\x93\xc0\x7f\xbd\xfe\x02\x00\x00\xff\xff\xf5\x54\xf7\xc3\x39\x01\x00\x00")

func templatesLayoutsUserTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesLayoutsUserTmpl,
		"templates/layouts/user.tmpl",
	)
}

func templatesLayoutsUserTmpl() (*asset, error) {
	bytes, err := templatesLayoutsUserTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/layouts/user.tmpl", size: 313, mode: os.FileMode(420), modTime: time.Unix(1445340636, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesWwwAboutTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb2\xc9\x30\x52\x48\xce\x49\x2c\x2e\xb6\x55\x2a\x49\xad\x28\xd1\x4d\x4e\xcd\x2b\x49\x2d\x52\xb2\x73\x4c\xca\x2f\x2d\xb1\xd1\xcf\x30\xb2\x03\x04\x00\x00\xff\xff\x54\x5a\x9b\x6f\x22\x00\x00\x00")

func templatesWwwAboutTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesWwwAboutTmpl,
		"templates/www/about.tmpl",
	)
}

func templatesWwwAboutTmpl() (*asset, error) {
	bytes, err := templatesWwwAboutTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/www/about.tmpl", size: 34, mode: os.FileMode(420), modTime: time.Unix(1429931287, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesWwwDemoTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x96\xcd\x8e\xd3\x30\x10\xc7\xcf\xf4\x29\x8c\x2f\x0b\x07\xd7\xb4\x85\x15\x82\x34\x27\x24\xf6\xc2\x85\x2b\x42\xc8\x49\x66\x1b\x97\x24\xce\x8e\x27\x2d\x7d\x7b\xc6\x49\x9a\xee\xa2\x4d\xd5\xad\xaa\x52\xa9\x8d\xc7\x1f\xff\xdf\x78\xc6\xf1\x34\x2a\x6c\xf5\x5b\xe4\x08\xf7\x4b\xa9\x8d\xf7\x40\x5e\xa7\xde\xeb\xf5\x43\x03\xb8\x9b\x12\x02\x90\x49\x0a\x98\x72\xa7\x14\x08\xc5\x52\x7a\xda\x15\xe0\x73\x1e\x90\x3a\x9e\x9c\x2c\x40\x39\x94\x30\xcd\xe0\xde\x34\x05\x8d\xca\x4d\xa2\x7c\x2e\xd2\x82\x85\x96\x92\xe0\x0f\xa9\x14\x2a\x02\x94\xf1\x37\x53\x19\xb2\x95\x15\x5f\xa0\x74\x91\xce\xe7\xed\xdc\xc5\xb3\x73\xbf\x5a\xba\x6b\x12\xf1\x1d\xea\x89\xe0\x4f\x64\xf6\xb3\x12\xaa\x04\x7f\x55\xf0\x59\xf6\x4e\xe7\x44\xb5\xff\xa4\xf5\xca\x52\xde\x24\xd3\xd4\x95\xfa\xce\x25\xee\xe3\xad\x2e\x0d\x06\xe2\x2f\x6f\xca\xba\x00\x19\x87\x55\x91\x36\xbc\x67\x9d\x2f\x02\x3e\xb3\x9b\xbd\x32\xba\xad\x8c\x3b\xda\xa3\xde\xd4\x15\xca\x97\x6a\x36\xef\xc7\xda\xf1\x36\x1c\x83\xdf\xad\xd1\xfe\xaa\xc4\x61\x06\x08\x59\x6f\xe6\x6e\x03\x28\x86\x00\x3e\x92\xe8\x64\x50\x64\x86\x8c\x22\x52\x36\x5b\xca\x77\xff\x8c\x77\x73\xb2\xd8\xd4\x75\xa4\xf9\xf9\x74\xb1\x26\x3c\x2e\x37\x93\x83\x59\x1b\xe4\xb8\x1e\x85\xa0\x6b\x38\xf0\xfe\x1c\xd0\xb3\x9c\xd9\x08\x67\xbb\xdd\xea\xdc\xf1\x31\x5a\xb9\xab\xb0\x4c\xc2\x1b\xbb\x16\xac\xf1\x80\x67\xb2\x16\x2f\xca\x56\xe9\x32\x28\xce\x4a\xd6\xfb\x17\x71\x08\xf8\xbd\x31\x04\x67\xa1\x3e\x8c\x47\xea\x62\xd9\x18\x63\xf0\x85\xd1\x5f\x68\x21\x27\x9a\x93\xd6\x37\xc2\xdb\x7f\x45\x7a\xe1\x56\xb6\x62\x78\xfb\xbc\x3e\x9b\xcf\x7e\x07\xe7\xc6\x95\xe9\x08\x2b\xeb\x03\xbd\x6b\x9c\x4b\xbf\x1d\xbd\x14\xed\xc5\x36\x33\xc6\x38\x6c\x86\x69\x87\x83\x74\x30\x2e\x1a\xd2\xd3\xbc\xd8\x1f\xa8\xa1\xfd\x1f\x7c\xe8\x32\x1a\xca\xf4\x13\xf3\x14\x4f\xd8\x0a\x95\xb0\xaf\xb3\x9a\x0b\x6d\xa8\xc5\xed\x83\xab\xf1\x6b\xa5\x44\xe4\x53\xb4\x35\x09\x8f\xe9\x52\xae\x3d\x13\x6a\x3d\x54\xd0\x43\x8b\xbd\x5e\xc1\x74\xed\x25\x23\xbb\x15\xb1\x50\x8a\xc5\xfa\xe5\xb4\xab\xa1\xfb\x4f\xa1\xd7\x66\x63\xba\x5e\xde\xdd\x2b\x84\x87\xc6\x22\xac\xfd\x9b\x1f\x37\xc7\xb4\x6f\x7e\xbe\xfd\x3c\x19\xb4\xff\x06\x00\x00\xff\xff\x0d\xd6\x8b\x42\x65\x09\x00\x00")

func templatesWwwDemoTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesWwwDemoTmpl,
		"templates/www/demo.tmpl",
	)
}

func templatesWwwDemoTmpl() (*asset, error) {
	bytes, err := templatesWwwDemoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/www/demo.tmpl", size: 2405, mode: os.FileMode(420), modTime: time.Unix(1445417800, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesWwwHomeTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb2\x49\xc9\x2c\x53\x48\xce\x49\x2c\x2e\xb6\x55\xca\x2a\xcd\x4d\xca\x2f\x29\xca\xcf\x53\xb2\xe3\x52\x50\xb0\xc9\x30\xb4\x0b\x4f\xcd\x49\xce\xcf\x4d\x55\xb4\xd1\x07\x72\x40\x62\x05\x76\x4f\x27\x2c\x7f\x3a\x75\x19\x32\xf9\x7e\x4f\xa3\x8d\x7e\x01\x54\xda\x26\x11\x66\x5a\x52\x49\x9e\x02\x10\xeb\x16\x14\x65\xe6\x26\x16\x55\x82\xd9\x39\xe9\x4a\x0a\x19\x45\xa9\x69\xb6\x4a\x19\x25\x25\x05\xc5\x56\xfa\xfa\xe9\x99\x25\x19\xa5\x49\x7a\x40\x5b\xf4\x33\xf2\x93\xf2\x2d\xcc\x94\x14\x8a\xf2\x73\x52\x81\xda\x4b\x4b\x4a\x40\x2e\x71\xcf\x2c\xf1\x28\x4d\xb2\xd1\x4f\xb4\x03\x5b\x62\xa3\x0f\x74\xb0\x1d\x17\x17\x20\x00\x00\xff\xff\x8b\xe5\x72\x41\xb8\x00\x00\x00")

func templatesWwwHomeTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesWwwHomeTmpl,
		"templates/www/home.tmpl",
	)
}

func templatesWwwHomeTmpl() (*asset, error) {
	bytes, err := templatesWwwHomeTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/www/home.tmpl", size: 184, mode: os.FileMode(420), modTime: time.Unix(1444812382, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesWwwLoginTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x8f\x4f\x4a\xc7\x30\x10\x85\xd7\xed\x29\xc2\xec\x6b\xa0\xeb\x24\x5e\x40\xb0\xa0\x1e\x20\x4d\x46\x13\x4c\x93\x30\x9d\xa2\x52\x7a\x77\x5b\xea\x9f\x1f\xdd\x3c\x78\xc3\xe3\x63\x3e\x15\x7a\xe1\x92\x9d\x67\x0d\x8c\x9f\xdc\x39\xcc\x8c\x04\xe6\xa1\xbc\xc5\xac\x64\xe8\x4d\xab\x5e\x0b\x4d\x62\x42\x0e\xc5\x6b\x18\x1e\x9f\x9e\x41\x58\xc7\xb1\x64\x0d\x32\x1d\xbb\x7b\x42\x1f\x09\x1d\x77\x0b\x25\xbd\xae\x77\xdb\x06\xa6\x6d\x54\xcc\x75\x61\xc1\x5f\x15\x4f\x3a\x88\x9a\xac\xc3\x50\x92\x47\xd2\xf0\x32\x23\x65\x3b\x21\x88\x23\x35\xe4\xe8\xde\xcf\x2e\x8d\x1a\x69\xcf\x0b\xa3\xee\x7f\x7e\x14\xf2\x17\xce\xf0\x77\x3e\x39\xff\xb3\x1b\xce\xb8\x30\x97\xfc\xeb\xf5\xd3\x9a\x56\xc9\xc3\xce\x7c\x07\x00\x00\xff\xff\x4f\x9d\x58\x2b\x07\x01\x00\x00")

func templatesWwwLoginTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesWwwLoginTmpl,
		"templates/www/login.tmpl",
	)
}

func templatesWwwLoginTmpl() (*asset, error) {
	bytes, err := templatesWwwLoginTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/www/login.tmpl", size: 263, mode: os.FileMode(420), modTime: time.Unix(1435936041, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesWwwRegistTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x8f\x5d\x4a\xc5\x30\x10\x85\x9f\x6f\x57\x11\xe6\xfd\x1a\xb8\xcf\x49\x5c\x82\xc5\x9f\x05\xa4\xc9\x68\x82\x69\x12\x26\x53\x54\x4a\xf7\x6e\x6b\xa5\x4a\x5f\x0e\x9c\xe1\xf0\x31\x9f\x0a\x37\xe1\x92\x6d\x4d\x03\xe3\x27\x5f\x1d\x66\x46\x02\xf3\x88\x6f\xb1\xb1\x92\xe1\x66\x3a\xf5\x5a\x68\x14\x23\x72\x28\x5e\x43\xff\xf0\xf4\x0c\xc2\x3a\x8e\x25\x6b\x90\xf4\x33\xbc\x27\xf4\x91\xd0\xf1\x75\xa2\xa4\xe7\xf9\x6e\x59\xc0\x74\x17\x15\x73\x9d\x58\xf0\x57\xc5\x9d\x0f\xa2\x26\xeb\x30\x94\xe4\x91\x34\xbc\x34\xa4\x6c\x47\x04\xb1\xa5\x86\x1c\xdd\xfb\xde\xa5\x51\x03\xad\x79\x62\xd4\xf5\xd3\x8f\x42\xfe\xc4\xe9\x8f\xf3\xce\xf9\x9b\xfd\xe3\x0c\x13\x73\xc9\x87\xd9\x6f\xbd\x74\x4a\x6e\x7e\xe6\x3b\x00\x00\xff\xff\xc8\x1a\xc1\x23\x0a\x01\x00\x00")

func templatesWwwRegistTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesWwwRegistTmpl,
		"templates/www/regist.tmpl",
	)
}

func templatesWwwRegistTmpl() (*asset, error) {
	bytes, err := templatesWwwRegistTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/www/regist.tmpl", size: 266, mode: os.FileMode(420), modTime: time.Unix(1435936261, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesWwwUserTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb2\x49\xc9\x2c\x53\x48\xce\x49\x2c\x2e\xb6\x55\xca\x2a\xcd\x4d\xca\x2f\x29\xca\xcf\x53\xb2\xe3\x52\x50\xb0\xc9\x30\xb4\xf3\x48\xcd\xc9\xc9\x57\xa8\xae\xd6\xf3\xcb\x4c\xce\xce\x4b\xcc\x4d\xad\xad\x55\xb4\xd1\x07\x4a\x70\xd9\xe8\x03\x35\xda\x71\x01\x02\x00\x00\xff\xff\x24\xd9\xde\x08\x3f\x00\x00\x00")

func templatesWwwUserTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesWwwUserTmpl,
		"templates/www/user.tmpl",
	)
}

func templatesWwwUserTmpl() (*asset, error) {
	bytes, err := templatesWwwUserTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/www/user.tmpl", size: 63, mode: os.FileMode(420), modTime: time.Unix(1433389603, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/40x.tmpl": templates40xTmpl,
	"templates/50x.tmpl": templates50xTmpl,
	"templates/includes/base.tmpl": templatesIncludesBaseTmpl,
	"templates/layout.tmpl": templatesLayoutTmpl,
	"templates/layouts/about.tmpl": templatesLayoutsAboutTmpl,
	"templates/layouts/demo.tmpl": templatesLayoutsDemoTmpl,
	"templates/layouts/home.tmpl": templatesLayoutsHomeTmpl,
	"templates/layouts/index.tmpl": templatesLayoutsIndexTmpl,
	"templates/layouts/login.tmpl": templatesLayoutsLoginTmpl,
	"templates/layouts/register.tmpl": templatesLayoutsRegisterTmpl,
	"templates/layouts/user.tmpl": templatesLayoutsUserTmpl,
	"templates/www/about.tmpl": templatesWwwAboutTmpl,
	"templates/www/demo.tmpl": templatesWwwDemoTmpl,
	"templates/www/home.tmpl": templatesWwwHomeTmpl,
	"templates/www/login.tmpl": templatesWwwLoginTmpl,
	"templates/www/regist.tmpl": templatesWwwRegistTmpl,
	"templates/www/user.tmpl": templatesWwwUserTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"40x.tmpl": &bintree{templates40xTmpl, map[string]*bintree{}},
		"50x.tmpl": &bintree{templates50xTmpl, map[string]*bintree{}},
		"includes": &bintree{nil, map[string]*bintree{
			"base.tmpl": &bintree{templatesIncludesBaseTmpl, map[string]*bintree{}},
		}},
		"layout.tmpl": &bintree{templatesLayoutTmpl, map[string]*bintree{}},
		"layouts": &bintree{nil, map[string]*bintree{
			"about.tmpl": &bintree{templatesLayoutsAboutTmpl, map[string]*bintree{}},
			"demo.tmpl": &bintree{templatesLayoutsDemoTmpl, map[string]*bintree{}},
			"home.tmpl": &bintree{templatesLayoutsHomeTmpl, map[string]*bintree{}},
			"index.tmpl": &bintree{templatesLayoutsIndexTmpl, map[string]*bintree{}},
			"login.tmpl": &bintree{templatesLayoutsLoginTmpl, map[string]*bintree{}},
			"register.tmpl": &bintree{templatesLayoutsRegisterTmpl, map[string]*bintree{}},
			"user.tmpl": &bintree{templatesLayoutsUserTmpl, map[string]*bintree{}},
		}},
		"www": &bintree{nil, map[string]*bintree{
			"about.tmpl": &bintree{templatesWwwAboutTmpl, map[string]*bintree{}},
			"demo.tmpl": &bintree{templatesWwwDemoTmpl, map[string]*bintree{}},
			"home.tmpl": &bintree{templatesWwwHomeTmpl, map[string]*bintree{}},
			"login.tmpl": &bintree{templatesWwwLoginTmpl, map[string]*bintree{}},
			"regist.tmpl": &bintree{templatesWwwRegistTmpl, map[string]*bintree{}},
			"user.tmpl": &bintree{templatesWwwUserTmpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

